'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var noop = function noop() {};

var StayScrolled = function (_Component) {
  _inherits(StayScrolled, _Component);

  function StayScrolled() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, StayScrolled);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StayScrolled.__proto__ || Object.getPrototypeOf(StayScrolled)).call.apply(_ref, [this].concat(args))), _this), _this.onScroll = function () {
      var isScrolled = _this.wasScrolled = _this.isScrolled();
      var _this$props = _this.props,
          onScroll = _this$props.onScroll,
          onScrolled = _this$props.onScrolled;


      onScroll();
      if (isScrolled) {
        onScrolled();
      }
    }, _this.storeDOM = function (dom) {
      var _provideDOMNode = _this.props._provideDOMNode;

      _provideDOMNode(dom);
      _this.dom = dom;
    }, _this.stayScrolled = function () {
      var notify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var onStayScrolled = _this.props.onStayScrolled;


      if (_this.wasScrolled) {
        _this.scrollBottom();
      }

      if (notify) {
        onStayScrolled(_this.wasScrolled);
      }
    }, _this.scrollBottom = function () {
      var offset = (0, _util.maxScrollTop)(_this.dom);
      var _this$props2 = _this.props,
          runScroll = _this$props2.runScroll,
          debug = _this$props2.debug;


      debug('Scrolling bottom: scrollOffset=' + offset);

      runScroll(_this.dom, offset);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(StayScrolled, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        stayScrolled: this.stayScrolled,
        scrollBottom: this.scrollBottom
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          startScrolled = _props.startScrolled,
          provideControllers = _props.provideControllers;


      this.wasScrolled = startScrolled || this.isScrolled();

      if (startScrolled) {
        this.scrollBottom(false);
      }

      provideControllers({
        stayScrolled: this.stayScrolled,
        scrollBottom: this.scrollBottom
      });
    }
  }, {
    key: 'isScrolled',
    value: function isScrolled() {
      var stayInaccuracy = this.props.stayInaccuracy;

      // scrollTop is a floating point, the rest are integers rounded up
      // naively: actualScrollHeight = scrollHeight - (Math.ceil(scrollTop) - scrollTop)

      return Math.ceil(this.dom.scrollTop) >= (0, _util.maxScrollTop)(this.dom) - stayInaccuracy;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          component = _props2.component,
          children = _props2.children,
          startScrolled = _props2.startScrolled,
          onStayScrolled = _props2.onStayScrolled,
          onScroll = _props2.onScroll,
          onScrolled = _props2.onScrolled,
          runScroll = _props2.runScroll,
          stayInaccuracy = _props2.stayInaccuracy,
          provideControllers = _props2.provideControllers,
          debug = _props2.debug,
          _provideDOMNode = _props2._provideDOMNode,
          rest = _objectWithoutProperties(_props2, ['component', 'children', 'startScrolled', 'onStayScrolled', 'onScroll', 'onScrolled', 'runScroll', 'stayInaccuracy', 'provideControllers', 'debug', '_provideDOMNode']);

      var props = _extends({}, rest, {
        ref: this.storeDOM,
        onScroll: this.onScroll
      });

      return (0, _react.createElement)(component, props, children);
    }
  }]);

  return StayScrolled;
}(_react.Component);

StayScrolled.propTypes = {
  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.element]),
  children: _propTypes2.default.node,
  startScrolled: _propTypes2.default.bool,
  onStayScrolled: _propTypes2.default.func,
  onScroll: _propTypes2.default.func,
  onScrolled: _propTypes2.default.func,
  runScroll: _propTypes2.default.func,
  stayInaccuracy: _propTypes2.default.number,
  provideControllers: _propTypes2.default.func,
  debug: _propTypes2.default.func,
  _provideDOMNode: _propTypes2.default.func // for testing only, don't use findDOMNode
};
StayScrolled.defaultProps = {
  children: null, // TODO
  component: 'div',
  startScrolled: true,
  stayInaccuracy: 0,
  onScroll: noop,
  onScrolled: noop,
  onStayScrolled: noop,
  runScroll: _util.runScroll,
  provideControllers: noop, // TODO
  debug: noop,
  _provideDOMNode: noop // TODO
};
StayScrolled.childContextTypes = {
  scrollBottom: _propTypes2.default.func,
  stayScrolled: _propTypes2.default.func
};
exports.default = StayScrolled;